From c04d6e7a66a7063a1f040e8afa55dd83ed7cf0be Mon Sep 17 00:00:00 2001
From: Steven van der Schoot <stevenvdschoot@gmail.com>
Date: Sat, 31 Dec 2022 12:09:41 +0100
Subject: [PATCH] Remove duplicate aliases

---
 newlib/libc/machine/arm/aeabi_memset.c  | 23 -----------------------
 newlib/libc/machine/arm/bzero.c         | 11 -----------
 newlib/libc/machine/arm/memcpy-armv7m.S |  3 ---
 newlib/libc/machine/arm/memmove.c       | 10 ----------
 4 files changed, 47 deletions(-)

diff --git a/newlib/libc/machine/arm/aeabi_memset.c b/newlib/libc/machine/arm/aeabi_memset.c
index 0ca7abc10..c7c4f3c2a 100644
--- a/newlib/libc/machine/arm/aeabi_memset.c
+++ b/newlib/libc/machine/arm/aeabi_memset.c
@@ -30,26 +30,3 @@
 #include <string.h>
 #include <_ansi.h>
 
-/* Support the alias for the __aeabi_memset which may
-   assume memory alignment.  */
-void __aeabi_memset4 (void *dest, size_t n, int c)
-	_ATTRIBUTE ((alias ("__aeabi_memset")));
-
-void __aeabi_memset8 (void *dest, size_t n, int c)
-	_ATTRIBUTE ((alias ("__aeabi_memset")));
-
-/* Support the routine __aeabi_memset.  Can't alias to memset
-   because the arguments are in a different order */
-/*
- *__attribute__((used)) added so that building with clang -flto
- * doesn't discard this function
- */
-
-#undef memset
-
-void __attribute__((used)) __aeabi_memset (void *dest, size_t n, int c)
-{
-  /*Note that relative to ANSI memset, __aeabi_memset hase the order
-    of its second and third arguments reversed.  */
-  memset (dest, c, n);
-}
diff --git a/newlib/libc/machine/arm/bzero.c b/newlib/libc/machine/arm/bzero.c
index 8100c9347..d46272134 100644
--- a/newlib/libc/machine/arm/bzero.c
+++ b/newlib/libc/machine/arm/bzero.c
@@ -28,14 +28,3 @@
 
 #include "../../string/bzero.c"
 
-/* Support the alias for the __aeabi_memclr which may
-   assume memory alignment.  */
-
-void __aeabi_memclr4 (void *dest, size_t n)
-	_ATTRIBUTE ((alias ("bzero")));
-
-void __aeabi_memclr8 (void *dest, size_t n)
-	_ATTRIBUTE ((alias ("bzero")));
-
-void __aeabi_memclr (void *dest, size_t n)
-	_ATTRIBUTE ((alias ("bzero")));
diff --git a/newlib/libc/machine/arm/memcpy-armv7m.S b/newlib/libc/machine/arm/memcpy-armv7m.S
index 592a45856..e8726a6d2 100644
--- a/newlib/libc/machine/arm/memcpy-armv7m.S
+++ b/newlib/libc/machine/arm/memcpy-armv7m.S
@@ -96,9 +96,6 @@
 	.thumb
 	.thumb_func
 	.type	memcpy, %function
-	ASM_ALIAS __aeabi_memcpy, memcpy
-	ASM_ALIAS __aeabi_memcpy4, memcpy
-	ASM_ALIAS __aeabi_memcpy8, memcpy
 memcpy:
 	@ r0: dst
 	@ r1: src
diff --git a/newlib/libc/machine/arm/memmove.c b/newlib/libc/machine/arm/memmove.c
index e9af3478a..cf3cb895f 100644
--- a/newlib/libc/machine/arm/memmove.c
+++ b/newlib/libc/machine/arm/memmove.c
@@ -35,13 +35,3 @@
 
 #include "../../string/memmove.c"
 
-/* Support the alias for the __aeabi_memmove which may
-   assume memory alignment.  */
-void *__aeabi_memmove4 (void *__restrict dest, const void *source, size_t n)
-	_ATTRIBUTE ((alias ("memmove")));
-
-void *__aeabi_memmove8 (void *dest, const void *source, size_t n)
-	_ATTRIBUTE ((alias ("memmove")));
-
-void *__aeabi_memmove (void *dest, const void *source, size_t n)
-	_ATTRIBUTE ((alias ("memmove")));
-- 
2.38.1

